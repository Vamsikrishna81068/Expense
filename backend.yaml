- name: Configure backend server
  become: yes
  hosts: db

  vars:
    login_host: 172.31.89.171
    login_password: ExpenseApp@1

  tasks:

    - name: Add NodeSource APT repository for Node.js
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
        state: present

    - name: Add Node.js 18.x repo
      ansible.builtin.apt_repository:
        repo: deb https://deb.nodesource.com/node_18.x nodistro main
        state: present
        filename: nodesource

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - nodejs
          - unzip
          - python3-pymysql
          - python3-cryptography
        state: present

    - name: Create expense user
      ansible.builtin.user:
        name: expense
        state: present

    - name: Create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
        owner: expense
        group: expense
        mode: '0755'

    - name: Download backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Unzip backend code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
        owner: expense
        group: expense

    - name: Install npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app
      environment:
        HOME: /home/expense

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
        mode: '0644'

    - name: Import MySQL schema
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"
        name: all
        state: import
        target: /app/schema/backend.sql

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start and enable backend service
      ansible.builtin.service:
        name: backend
        state: started
        enabled: yes
